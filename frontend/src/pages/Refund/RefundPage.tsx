import React, { useState } from 'react'
import styled, { keyframes, css } from 'styled-components'
import { SectionContainer } from '../../shared/ui/Container'

// –ê–Ω–∏–º–∞—Ü–∏–∏
const fadeIn = keyframes`
  from { opacity: 0; transform: translateY(20px); }
  to { opacity: 1; transform: translateY(0); }
`

const slideIn = keyframes`
  from { transform: translateX(-20px); opacity: 0; }
  to { transform: translateX(0); opacity: 1; }
`

const PageContainer = styled.div`
  display: flex;
  flex-direction: column;
  min-height: 100vh;
  background: linear-gradient(135deg, #0f0f23 0%, #1a1a2e 50%, #16213e 100%);
  color: #ffffff;
  font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
`

const Main = styled.main`
  flex: 1;
  padding: 4rem 0;
  
  @media (max-width: 768px) {
    padding: 2rem 0;
  }
`

const Title = styled.h1`
  font-size: 3rem;
  font-weight: 700;
  text-align: center;
  margin-bottom: 3rem;
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  -webkit-background-clip: text;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  
  @media (max-width: 768px) {
    font-size: 2.5rem;
    margin-bottom: 2rem;
  }
`

const ReturnSection = styled.div`
  display: flex;
  flex-direction: column;
  gap: 2rem;
  
  @media (min-width: 1200px) {
    flex-direction: row;
    gap: 3rem;
  }
`

const FormBlock = styled.div`
  flex: 1;
  background: rgba(255, 255, 255, 0.03);
  backdrop-filter: blur(20px);
  padding: 2.5rem;
  border-radius: 20px;
  border: 1px solid rgba(255, 255, 255, 0.1);
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
  animation: ${css`fadeIn`} 0.6s ease-out;
  
  @media (max-width: 768px) {
    padding: 2rem;
  }
`

const InfoBlock = styled.div`
  flex: 1;
  background: rgba(255, 255, 255, 0.05);
  backdrop-filter: blur(20px);
  padding: 2.5rem;
  border-radius: 20px;
  border: 1px solid rgba(255, 255, 255, 0.1);
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
  animation: ${css`slideIn`} 0.6s ease-out;
  
  @media (max-width: 768px) {
    padding: 2rem;
  }
`

const Form = styled.form`
  display: flex;
  flex-direction: column;
`

const Label = styled.label`
  font-weight: 600;
  color: #ffffff;
  margin-bottom: 0.5rem;
  font-size: 1rem;
`

const Input = styled.input`
  width: 100%;
  padding: 1rem;
  border-radius: 12px;
  border: 1px solid rgba(255, 255, 255, 0.2);
  margin-bottom: 1.5rem;
  font-family: inherit;
  font-size: 1rem;
  box-sizing: border-box;
  background: rgba(255, 255, 255, 0.05);
  color: #ffffff;
  transition: all 0.3s ease;
  
  &::placeholder {
    color: rgba(255, 255, 255, 0.5);
  }
  
  &:focus {
    outline: none;
    border-color: #667eea;
    background: rgba(255, 255, 255, 0.08);
    box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
  }
`

const Textarea = styled.textarea`
  width: 100%;
  padding: 1rem;
  border-radius: 12px;
  border: 1px solid rgba(255, 255, 255, 0.2);
  margin-bottom: 1.5rem;
  font-family: inherit;
  font-size: 1rem;
  box-sizing: border-box;
  background: rgba(255, 255, 255, 0.05);
  color: #ffffff;
  resize: vertical;
  min-height: 120px;
  transition: all 0.3s ease;
  
  &::placeholder {
    color: rgba(255, 255, 255, 0.5);
  }
  
  &:focus {
    outline: none;
    border-color: #667eea;
    background: rgba(255, 255, 255, 0.08);
    box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
  }
`

const FileInput = styled.div`
  position: relative;
  margin-bottom: 1.5rem;
  
  input[type="file"] {
    display: none;
  }
  
  label {
    display: block;
    padding: 1rem;
    border-radius: 12px;
    border: 2px dashed rgba(255, 255, 255, 0.3);
    background: rgba(255, 255, 255, 0.05);
    color: rgba(255, 255, 255, 0.7);
    text-align: center;
    cursor: pointer;
    transition: all 0.3s ease;
    
    &:hover {
      border-color: #667eea;
      background: rgba(255, 255, 255, 0.08);
      color: #ffffff;
    }
  }
`

const SubmitButton = styled.button`
  width: 100%;
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  color: #ffffff;
  padding: 1rem;
  font-size: 1.1rem;
  font-weight: 600;
  border: none;
  border-radius: 12px;
  cursor: pointer;
  transition: all 0.3s ease;
  margin-top: 1rem;
  
  &:hover {
    transform: translateY(-2px);
    box-shadow: 0 10px 25px rgba(102, 126, 234, 0.3);
  }
  
  &:active {
    transform: translateY(0);
  }
`

const SuccessMessage = styled.div`
  color: #4CAF50;
  margin-top: 1.5rem;
  font-weight: 600;
  text-align: center;
  padding: 1rem;
  background: rgba(76, 175, 80, 0.1);
  border-radius: 12px;
  border: 1px solid rgba(76, 175, 80, 0.3);
  animation: ${css`fadeIn`} 0.5s ease-out;
`

const InfoTitle = styled.h3`
  font-size: 1.5rem;
  font-weight: 600;
  color: #667eea;
  margin: 0 0 1.5rem 0;
`

const InfoText = styled.p`
  color: rgba(255, 255, 255, 0.8);
  line-height: 1.6;
  margin-bottom: 1rem;
  font-size: 1rem;
`

const InfoList = styled.ul`
  padding-left: 1.5rem;
  margin: 1.5rem 0;
  
  li {
    color: rgba(255, 255, 255, 0.8);
    margin-bottom: 0.8rem;
    line-height: 1.5;
    font-size: 1rem;
  }
  
  ul {
    padding-left: 1.5rem;
    margin: 1rem 0;
    
    li {
      margin-bottom: 0.5rem;
      font-size: 0.95rem;
    }
  }
`

const Divider = styled.hr`
  margin: 2rem 0;
  border: none;
  height: 1px;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
`

export const RefundPage: React.FC = () => {
  const [isSubmitted, setIsSubmitted] = useState(false)

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault()
    setIsSubmitted(true)
    
    // –°–±—Ä–æ—Å —Ñ–æ—Ä–º—ã
    const form = e.target as HTMLFormElement
    form.reset()
    
    // –°–∫—Ä—ã—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
    setTimeout(() => {
      setIsSubmitted(false)
    }, 5000)
  }

  return (
    <PageContainer>
      <Main>
        <SectionContainer>
          <Title>–û—Ç–∫–∞–∑ –æ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –∏ –≤–æ–∑–≤—Ä–∞—Ç —Å—Ä–µ–¥—Å—Ç–≤</Title>
          
          <ReturnSection>
            {/* –§–æ—Ä–º–∞ */}
            <FormBlock>
              <Form onSubmit={handleSubmit}>
                <Label><strong>–î–∞—Ç–∞ –∑–∞–∫–∞–∑–∞</strong></Label>
                <Input type="date" name="date" required />
                
                <Label><strong>–ü—Ä–∏—á–∏–Ω–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞</strong></Label>
                <Textarea 
                  name="reason" 
                  rows={4} 
                  required 
                  placeholder="–û–ø–∏—à–∏—Ç–µ, —Å —á–µ–º —Å–≤—è–∑–∞–Ω –≤–æ–∑–≤—Ä–∞—Ç –∏–ª–∏ –æ—Ç–º–µ–Ω–∞ –∑–∞–∫–∞–∑–∞"
                />
                
                <Label><strong>–ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞</strong></Label>
                <Input 
                  type="text" 
                  name="card" 
                  required 
                  placeholder="4276‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢5678" 
                  pattern="[0-9\s]{13,19}" 
                  inputMode="numeric"
                />
                
                <Label><strong>–ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç (—á–µ–∫ –∏–ª–∏ —Ñ–æ—Ç–æ)</strong></Label>
                <FileInput>
                  <input type="file" name="file" id="fileInput" />
                  <label htmlFor="fileInput">
                    üìé –í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª
                  </label>
                </FileInput>
                
                <SubmitButton type="submit">–û—Ç–ø—Ä–∞–≤–∏—Ç—å</SubmitButton>
              </Form>
              
              {isSubmitted && (
                <SuccessMessage>
                  –§–æ—Ä–º–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!
                </SuccessMessage>
              )}
            </FormBlock>

            {/* –ü—Ä–∞–≤–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
            <InfoBlock>
              <InfoTitle>–í–æ–∑–≤—Ä–∞—Ç —Ç–æ–≤–∞—Ä–∞</InfoTitle>
              <InfoText>
                –û—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å–æ —Å—Ç–∞—Ç—å—ë–π 26.1 –§–µ–¥–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∑–∞–∫–æ–Ω–∞ ¬´–û –∑–∞—â–∏—Ç–µ –ø—Ä–∞–≤ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–µ–π¬ª:
              </InfoText>
              <InfoList>
                <li>–ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—å –≤–ø—Ä–∞–≤–µ –æ—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç —Ç–æ–≤–∞—Ä–∞ –¥–æ –µ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è, –ª–∏–±–æ –≤ —Ç–µ—á–µ–Ω–∏–µ 7 –¥–Ω–µ–π –ø–æ—Å–ª–µ –ø–µ—Ä–µ–¥–∞—á–∏.</li>
                <li>–í–æ–∑–≤—Ä–∞—Ç –≤–æ–∑–º–æ–∂–µ–Ω –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–Ω–æ–≥–æ –≤–∏–¥–∞, —É–ø–∞–∫–æ–≤–∫–∏ –∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞, –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é—â–µ–≥–æ –ø–æ–∫—É–ø–∫—É.</li>
                <li>–ü—Ä–æ–¥–∞–≤–µ—Ü –æ–±—è–∑–∞–Ω –≤–µ—Ä–Ω—É—Ç—å –æ–ø–ª–∞—Ç—É –∑–∞ –≤—ã—á–µ—Ç–æ–º –¥–æ—Å—Ç–∞–≤–∫–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 10 –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω—ã—Ö –¥–Ω–µ–π —Å –º–æ–º–µ–Ω—Ç–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞.</li>
                <li>–í–æ–∑–≤—Ä–∞—Ç –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞–¥–ª–µ–∂–∞—â–µ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞ –Ω–µ –¥–æ–ø—É—Å–∫–∞–µ—Ç—Å—è.</li>
              </InfoList>

              <Divider />

              <InfoTitle>–û—Ç–∫–∞–∑ –æ—Ç —É—Å–ª—É–≥–∏</InfoTitle>
              <InfoText>
                –°–æ–≥–ª–∞—Å–Ω–æ —Å—Ç–∞—Ç—å–µ 32 –§–ó ¬´–û –∑–∞—â–∏—Ç–µ –ø—Ä–∞–≤ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–µ–π¬ª:
              </InfoText>
              <InfoList>
                <li>–ö–ª–∏–µ–Ω—Ç –≤–ø—Ä–∞–≤–µ –æ—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç —É—Å–ª—É–≥–∏ –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è —Å –∫–æ–º–ø–µ–Ω—Å–∞—Ü–∏–µ–π —Ä–∞—Å—Ö–æ–¥–æ–≤, –ø–æ–Ω–µ—Å—ë–Ω–Ω—ã—Ö –¥–æ –æ—Ç–∫–∞–∑–∞.</li>
                <li>–ü—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–æ–≤ —É—Å–ª—É–≥–∏ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—å –º–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å:</li>
                <ul>
                  <li>–±–µ–∑–≤–æ–∑–º–µ–∑–¥–Ω–æ–≥–æ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è;</li>
                  <li>—É–º–µ–Ω—å—à–µ–Ω–∏—è —Å—Ç–æ–∏–º–æ—Å—Ç–∏;</li>
                  <li>–≤–æ–∑–º–µ—â–µ–Ω–∏—è —Ä–∞—Å—Ö–æ–¥–æ–≤ –Ω–∞ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ —Å–≤–æ–∏–º–∏ —Å–∏–ª–∞–º–∏ –∏–ª–∏ —á–µ—Ä–µ–∑ —Ç—Ä–µ—Ç—å–∏—Ö –ª–∏—Ü.</li>
                </ul>
                <li>–ß–µ–∫ –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É—é –ø–æ—á—Ç—É –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã.</li>
              </InfoList>
            </InfoBlock>
          </ReturnSection>
        </SectionContainer>
      </Main>
    </PageContainer>
  )
} 