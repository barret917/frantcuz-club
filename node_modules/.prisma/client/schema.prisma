// ---------- Генератор клиента и подключение к БД ----------
generator client {
  provider = "prisma-client-js"
  output   = "../../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ---------- Зона (зал) ----------
model Zone {
  id        Int        @id @default(autoincrement())
  name      String
  openTime  String
  closeTime String
  imageUrl  String
  items     ZoneItem[] // 1 ко многим: одна зона → много элементов
}

// ---------- Элемент зоны ----------
model ZoneItem {
  id        Int     @id @default(autoincrement())
  zoneId    Int
  floor     Int     @default(1)
  label     String
  type      String
  isBooking Boolean @default(false)
  isActive  Boolean @default(true)

  x      Decimal @db.Decimal(5, 4)
  y      Decimal @db.Decimal(5, 4)
  width  Decimal @db.Decimal(5, 4)
  height Decimal @db.Decimal(5, 4)

  seats        Int?
  zone         Zone          @relation(fields: [zoneId], references: [id])
  reservations Reservation[]
}

// ---------- Бронирование ----------
model Reservation {
  id         Int               @id @default(autoincrement())
  zoneItemId Int // связь с элементом зоны
  userName   String
  phone      String
  startsAt   DateTime
  endsAt     DateTime
  deposit    Decimal           @db.Decimal(5, 2)
  status     ReservationStatus @default(booked)

  zoneItem ZoneItem  @relation(fields: [zoneItemId], references: [id])
  payments Payment[]
}

// ---------- Платёж ----------
model Payment {
  id            Int      @id @default(autoincrement())
  reservationId Int
  amount        Decimal  @db.Decimal(5, 2)
  payDate       DateTime @default(now())
  refunded      Boolean  @default(false)

  reservation Reservation @relation(fields: [reservationId], references: [id])
}

// ---------- Статусы бронирования ----------
enum ReservationStatus {
  booked // забронировано
  arrived // клиент пришёл
  no_show // клиент не пришёл
  cancelled // отменено
}
