import { PrismaClient } from '@prisma/client'

const prisma = new PrismaClient()

async function initDatabase() {
  try {
    console.log('üå± –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...')

    // –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã —á–µ—Ä–µ–∑ Prisma
    await prisma.$executeRaw`
      CREATE TABLE IF NOT EXISTS "BilliardsService" (
        id SERIAL PRIMARY KEY,
        name VARCHAR(255) NOT NULL,
        type VARCHAR(50) NOT NULL UNIQUE,
        "weekdayPrice" DECIMAL(8,2) NOT NULL,
        "weekendPrice" DECIMAL(8,2) NOT NULL,
        description TEXT,
        "imageUrl" TEXT,
        "isActive" BOOLEAN DEFAULT true,
        "sortOrder" INTEGER DEFAULT 0,
        "createdAt" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        "updatedAt" TIMESTAMP DEFAULT CURRENT_TIMESTAMP
      )
    `

    await prisma.$executeRaw`
      CREATE TABLE IF NOT EXISTS "BilliardsSettings" (
        id SERIAL PRIMARY KEY,
        "bookingFee" DECIMAL(8,2) DEFAULT 100,
        "bookingTimeoutMinutes" INTEGER DEFAULT 20,
        "minBookingDuration" INTEGER DEFAULT 60,
        "maxBookingDuration" INTEGER DEFAULT 480,
        "isActive" BOOLEAN DEFAULT true,
        "createdAt" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        "updatedAt" TIMESTAMP DEFAULT CURRENT_TIMESTAMP
      )
    `

    // –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã –∫–∞—Ä–∞–æ–∫–µ
    await prisma.$executeRaw`
      CREATE TABLE IF NOT EXISTS "KaraokeService" (
        id SERIAL PRIMARY KEY,
        name VARCHAR(255) NOT NULL,
        type VARCHAR(50) NOT NULL UNIQUE,
        "weekdayPrice" DECIMAL(8,2) NOT NULL,
        "weekendPrice" DECIMAL(8,2) NOT NULL,
        description TEXT,
        "imageUrl" TEXT,
        "isActive" BOOLEAN DEFAULT true,
        "sortOrder" INTEGER DEFAULT 0,
        "createdAt" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        "updatedAt" TIMESTAMP DEFAULT CURRENT_TIMESTAMP
      )
    `

    await prisma.$executeRaw`
      CREATE TABLE IF NOT EXISTS "KaraokeSettings" (
        id SERIAL PRIMARY KEY,
        "maxVipGuests" INTEGER DEFAULT 15,
        "baseVipPrice" DECIMAL(8,2) DEFAULT 21000,
        "additionalGuestPrice" DECIMAL(8,2) DEFAULT 3500,
        "depositPolicy" TEXT DEFAULT '–í —Å–ª—É—á–∞–µ –Ω–µ–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å—É–º–º—ã –¥–µ–ø–æ–∑–∏—Ç–∞, –¥–µ–Ω–µ–∂–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞ –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç—Å—è.',
        "isActive" BOOLEAN DEFAULT true,
        "createdAt" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        "updatedAt" TIMESTAMP DEFAULT CURRENT_TIMESTAMP
      )
    `

    console.log('‚úÖ –¢–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!')

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –±–∏–ª—å—è—Ä–¥–∞
    const existingBilliardsServices = await prisma.billiardsService.findMany()

    if (existingBilliardsServices.length === 0) {
      console.log('üé± –°–æ–∑–¥–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –±–∏–ª—å—è—Ä–¥–∞...')

      // –°–æ–∑–¥–∞–µ–º —É—Å–ª—É–≥–∏ –±–∏–ª—å—è—Ä–¥–∞
      await prisma.billiardsService.createMany({
        data: [
          {
            name: '–†—É—Å—Å–∫–∏–π –±–∏–ª—å—è—Ä–¥',
            type: 'russian',
            weekdayPrice: 900,
            weekendPrice: 960,
            description: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π —Ä—É—Å—Å–∫–∏–π –±–∏–ª—å—è—Ä–¥ —Å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–º–∏ —Å—Ç–æ–ª–∞–º–∏',
            imageUrl: '',
            isActive: true,
            sortOrder: 1
          },
          {
            name: '–ê–º–µ—Ä–∏–∫–∞–Ω—Å–∫–∏–π –ø—É–ª',
            type: 'american',
            weekdayPrice: 840,
            weekendPrice: 900,
            description: '–ê–º–µ—Ä–∏–∫–∞–Ω—Å–∫–∏–π –ø—É–ª –¥–ª—è –ª—é–±–∏—Ç–µ–ª–µ–π –±—ã—Å—Ç—Ä–æ–π –∏–≥—Ä—ã',
            imageUrl: '',
            isActive: true,
            sortOrder: 2
          },
          {
            name: 'VIP –∑–∞–ª—ã',
            type: 'vip',
            weekdayPrice: 1440,
            weekendPrice: 1500,
            description: '–ü—Ä–µ–º–∏—É–º VIP –∑–∞–ª—ã —Å —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–º –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ–º',
            imageUrl: '',
            isActive: true,
            sortOrder: 3
          }
        ]
      })

      // –°–æ–∑–¥–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∏–ª—å—è—Ä–¥–∞
      await prisma.billiardsSettings.create({
        data: {
          bookingFee: 100,
          bookingTimeoutMinutes: 20,
          minBookingDuration: 60,
          maxBookingDuration: 480,
          isActive: true
        }
      })

      console.log('‚úÖ –ù–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –±–∏–ª—å—è—Ä–¥–∞ —Å–æ–∑–¥–∞–Ω—ã!')
    } else {
      console.log('‚ÑπÔ∏è –î–∞–Ω–Ω—ã–µ –¥–ª—è –±–∏–ª—å—è—Ä–¥–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç')
    }

    // –°–æ–∑–¥–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–∞—Ä–∞–æ–∫–µ —á–µ—Ä–µ–∑ raw SQL
    console.log('üé§ –°–æ–∑–¥–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–∞—Ä–∞–æ–∫–µ...')
    
    await prisma.$executeRaw`
      INSERT INTO "KaraokeService" (name, type, "weekdayPrice", "weekendPrice", description, "imageUrl", "isActive", "sortOrder")
      VALUES 
        ('–î–µ–ø–æ–∑–∏—Ç', 'deposit', 2000, 2500, '–î–µ–ø–æ–∑–∏—Ç –¥–ª—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∫–∞—Ä–∞–æ–∫–µ –∑–∞–ª–∞', '', true, 1),
        ('VIP –∑–∞–ª', 'vip', 21000, 21000, 'VIP –∑–∞–ª –Ω–∞ –∫–æ–º–ø–∞–Ω–∏—é –¥–æ 6 –≥–æ—Å—Ç–µ–π', '', true, 2)
      ON CONFLICT (type) DO NOTHING
    `

    await prisma.$executeRaw`
      INSERT INTO "KaraokeSettings" ("maxVipGuests", "baseVipPrice", "additionalGuestPrice", "depositPolicy", "isActive")
      VALUES (15, 21000, 3500, '–í —Å–ª—É—á–∞–µ –Ω–µ–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å—É–º–º—ã –¥–µ–ø–æ–∑–∏—Ç–∞, –¥–µ–Ω–µ–∂–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞ –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç—Å—è.', true)
      ON CONFLICT (id) DO NOTHING
    `

    console.log('‚úÖ –ù–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–∞—Ä–∞–æ–∫–µ —Å–æ–∑–¥–∞–Ω—ã!')

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error)
  } finally {
    await prisma.$disconnect()
  }
}

initDatabase() 